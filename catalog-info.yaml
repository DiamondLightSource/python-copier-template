apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: python_copier_template
  title: Python Copier Template
  description: Create a project based on this template using Copier
  tags:
    - recommended
    - techdocs
    - mkdocs
spec:
  owner: kqd14687
  type: documentation

  parameters:
    - title: About You
      required:
        - full_name
        - email
        - owner
      properties:
        full_name:
          title: Firstname LastName
          type: string
        email:
          title: email@diamond.ac.uk
          type: string
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Project Details
      required:
        - name
        - description
        - repoUrl
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: A description for the component
        repoUrl:
          title: Repo Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
    - title: Template Options
      properties:
        docker_containers:
          title: Are you working with Docker containers?
          type: boolean
          default: "false"
        vscode_option:
          title: Are you using vscode?
          type: boolean
          default: "false"
        docs_option:
          title: Would you like docs?
          type: boolean
          default: "false"


  # This template is meant to be used on top of an existing template.
  # By adding the following and fetching from an absolute URL you can
  # add in the docs template
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:copier
      input:
        url: .
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          project_description: ${{ parameters.description }}
          full_name: ${{ parameters.full_name }}
          email: ${{ parameters.email }}
          docker_containers: ${{ parameters.docker_containers }}
          vscode_option: ${{ parameters.vscode_option }}
          docs_option: ${{ parameters.docs_option }}

          package_name: "package_name"
          git_platform: "GitHub"
          github_org: "github_org"
          repo_name: "repo_name"
          pypi_name: "pypi_name"

          project_name: "project_name"
          url: "url"

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
