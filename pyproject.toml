[build-system]
requires = ["setuptools>=64", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "python-copier-template"
dynamic = ["version"]
requires-python = ">=3.11"

[dependency-groups]
dev = [
    "copier",
    "myst-parser",
    "pre-commit",
    "pydata-sphinx-theme>=0.12",
    "pytest",
    "ruff",
    "sphinx-autobuild",
    "sphinx-copybutton",
    "sphinx-design",
    "tox-uv",
]

[tool.setuptools_scm]

[tool.pytest.ini_options]
# Run pytest with all our checkers, and don't spam us with massive tracebacks on error
addopts = """
    --tb=native -vv --doctest-modules --doctest-glob="*.rst"
    """
# Doctest python code in docs, python code in src docstrings, test functions in tests
testpaths = "tests"

[tool.tox]
skipsdist = true
# envs to runs automatically with tox -p
env_list = ["pre-commit", "tests", "docs"]

[tool.tox.env_run_base]
# Pass all environment variables to the test environments
passenv = ["*"]

[tool.tox.env.pre-commit]
description = "Run pre-commit on all files"
commands = [
    [
        "pre-commit",
        "run",
        "--all-files",
        "--show-diff-on-failure",
        { replace = "posargs", default = [
        ], extend = true },
    ],
]

[tool.tox.env.tests]
description = "Run tests"
commands = [["pytest", { replace = "posargs", default = [], extend = true }]]

[tool.tox.env.docs]
description = "Run docs build with clean environment"
commands = [
    [
        "sphinx-build",
        "--fresh-env",
        "--show-traceback",
        "--fail-on-warning",
        "--keep-going",
        "docs",
        "build/html",
        { replace = "posargs", default = [
        ], extend = true },
    ],
]

[tool.tox.env.docs-autobuild]
description = "Run docs with autobuild on change"
commands = [
    [
        "sphinx-autobuild",
        "--show-traceback",
        "--watch",
        "README.md",
        "docs",
        "build/html",
        { replace = "posargs", default = [
        ], extend = true },
    ],
]

[tool.ruff]
src = ["src", "tests"]
line-length = 88
lint.select = [
    "B",  # flake8-bugbear - https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
    "C4", # flake8-comprehensions - https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
    "E",  # pycodestyle errors - https://docs.astral.sh/ruff/rules/#error-e
    "F",  # pyflakes rules - https://docs.astral.sh/ruff/rules/#pyflakes-f
    "W",  # pycodestyle warnings - https://docs.astral.sh/ruff/rules/#warning-w
    "I",  # isort - https://docs.astral.sh/ruff/rules/#isort-i
    "UP", # pyupgrade - https://docs.astral.sh/ruff/rules/#pyupgrade-up
]
